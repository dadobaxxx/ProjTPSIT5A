import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

public class Server {

    private static final int DEFAULT_SERVICE_PORT = 55555;

    public static void main(String[] argv) {
        try {
            startServer();
            System.out.println("Server avviato correttamente");
        } catch (IOException e) {
            e.printStackTrace();
            //throw new RuntimeException(e);
        }
    }

    public static void startServer() throws IOException {
        try (ServerSocket server = new ServerSocket(DEFAULT_SERVICE_PORT)) {
            System.out.println("Porta aperta...");
            while (true) {
                Socket s = server.accept();
                System.out.println("Un client si Ã¨ connesso...");
                new Handler(s).start(); // Avvia il thread per gestire il client
            }
        } catch (IOException e) {
            System.out.println("Problemi riscontrati nell'apertura della porta, chiusura del server...");
        }
    }

    static class Handler extends Thread {
        private final Socket clientSocket;

        public Handler(Socket socket) {
            this.clientSocket = socket;
        }

        @Override
        public void run() {
            // Gestione della comunicazione con il client
            try {
                // Qui puoi implementare la logica di comunicazione
                clientSocket.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}
